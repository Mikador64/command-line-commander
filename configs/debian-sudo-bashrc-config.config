[
  'Auto sudo + .bashrc setup',
  {
    'cmd' => 'echo $USER | perl -nle \'print qq~${_} ALL=(ALL) NOPASSWD:ALL~\' | sudo tee -a /etc/sudoers',
    'title' => 'Add User to Sudoers Without Password'
  },
  {
    'cmd' => 'STOP',
    'title' => 'STOP'
  },
  {
    'cmd' => 'printf "######## Customized .bashrc Config\\n\\n# Set vi mode for command line editing\\nset -o vi\\n\\n# Export Environment Variables\\n# Set default editor as Vim\\nexport VISUAL=/usr/bin/vim\\n# Customize the command prompt\\nexport PS1=\'\\\\w> \'\\n# Add custom path to PATH\\nexport PATH=\\$HOME/code:\\$PATH" >> ~/.bashrc',
    'title' => 'Customize .bashrc File'
  },
  {
    'cmd' => 'printf "\\n# Alias Commands\\n# Alias for clearing the screen\\nalias c=\'clear\'\\n# Alias for listing files in long format with human-readable sizes\\nalias l=\'clear && ls -lha\'\\n# Alias to edit and reload .bashrc\\nalias bed=\\"vi \\${HOME}/.bashrc && source \\${HOME}/.bashrc && clear\\"\\n# Alias to view command history\\nalias h=\'history\'\\n# Alias to edit Apache config and restart Apache server\\nalias web=\'sudo vi /etc/apache2/sites-available/web.conf && sudo service apache2 restart\'\\n# Alias to change directory to /var/www/\\nalias www=\'cd /var/www/\'\\n# Alias for updating and upgrading the system\\nalias up=\'sudo apt update -y && sudo apt upgrade -y\'\\n# Alias for setting up SSL with certbot and restarting Apache\\nalias ssl=\'sudo certbot --apache && sudo service apache2 restart\'\\n# Alias to check SSH login attempts, remote logins, and active sessions in a single line\\nalias w=\'clear && sudo fail2ban-client status sshd | grep -v Banned && printf \\"*** REMOTE LOGINS ***\\\\n\\" && lastlog | grep -v \\"\\\\*\\\\*Never\\" && printf \\"*** STILL LOGGED IN ***\\\\n\\" && last | grep -i still\'\\n# Alias for copying files with rsync\\nalias cpr=\\"rsync --archive --verbose --update  --progress\\"" >> ~/.bashrc',
    'title' => 'Append Alias Commands to .bashrc'
  },
  {
    'cmd' => 'STOP',
    'title' => 'STOP'
  },
  {
    'cmd' => 'printf "\\nfunction webfriend()\\n{\\n    perl -M\'Term::ANSIColor 2.00 qw(:pushpop)\' -MFile::Copy -E \'map { chomp; if (-f) { \\$o=\\$_; \\$_ = lc \\$_; s~[.-](?{\\$m=\\$&})|[\\\\s+_](?{\\$m=q[-]})|[[:punct:]](?{\\$m=q[]})~\\$m~ge; s~-{2,}(?{\\$m=q[-]})|-(?=\\\\.)(?{\\$m=q[]})~\\$m~ge; say PUSHCOLOR BRIGHT_YELLOW \\$o, RESET q[ >> ], PUSHCOLOR BRIGHT_GREEN \\$_; move (\\$o, \\$_); print RESET }} glob(q[*])\'\\n}" >> ~/.bashrc',
    'title' => 'Add webfriend Function to .bashrc'
  },
  {
    'cmd' => 'printf "function mysqlbackup()\\n{\\n    perl -se \'map { print qq[\\\\L\\$\\\\E> ]; chomp(\\$in = <STDIN>); \\$db->{\\$_} = \\$in } qw[USER PASS DATABASE]; \\$db->{TIME} = time; system(\\$sql =~ s~USER|PASS|DATABASE|TIME~\\$db->{\\$&}~ger);\' -- -sql=\\"sudo mysqldump --user=\'USER\' --password=\'PASS\' DATABASE > TIME_DATABASE.sql\\"\\n}" >> ~/.bashrc',
    'title' => 'Add mysqlbackup Function to .bashrc'
  },
  {
    'cmd' => 'printf "\\n# sudouser Function: Adds a user and grants sudo privileges\\nfunction sudouser()\\n{\\n    perl -MTerm::ANSIColor=\':constants\' -sE \'printf q|> %s%s: |, GREEN q|user|, RESET; chomp(\\$u = <STDIN>); \\$n = 0; map { if (\\$n++ == 2) { qx|\\${_}| =~ s~^\\${u}.*\\$~say q|> |, YELLOW \\$&, RESET~gemr } else { \\$run = qq|sudo \\${_} \\${u}|; printf qq|> %s%s\\\\n|, YELLOW \\$run, RESET; system \\$run; } } split m|~|, \\$cmds;\' -- -cmds=\'adduser~usermod -aG sudo~cat /etc/passwd\'\\n}" >> ~/.bashrc',
    'title' => 'Add sudouser Function to .bashrc'
  },
  {
    'cmd' => 'printf "\\n# clonewww Function: Mirrors a website for offline viewing\\nfunction clonewww()\\n{\\n    wget --user-agent=\'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36\' --continue --limit-rate=500k --wait=2 --random-wait --no-if-modified-since --mirror --convert-links --adjust-extension --page-requisites --no-parent \\$1\\n}" >> ~/.bashrc',
    'title' => 'Add clonewww Function to .bashrc'
  }
]

